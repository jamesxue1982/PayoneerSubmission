<?xml version="1.0" encoding="utf-8"?>
<TestRun id="8d73df45-ae6e-4c8e-aea1-88a756476b3b" name="win10@DESKTOP-93H19L3 2025-07-30 19:42:48" runUser="DESKTOP-93H19L3\win10" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-07-30T19:42:48.6790737+08:00" queuing="2025-07-30T19:42:48.6790741+08:00" start="2025-07-30T19:42:45.2471638+08:00" finish="2025-07-30T19:43:30.8216867+08:00" />
  <TestSettings name="default" id="6a52f409-5e42-4b04-b401-9b7f3bca632e">
    <Deployment runDeploymentRoot="win10_DESKTOP-93H19L3_2025-07-30_19_42_48" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="bca7a341-9d30-47da-8668-12e3f07e3ae5" testId="cec11af5-3b4a-fb93-691d-9eb40784b553" testName="DeleteTodoItemPerformanceLoadTest" computerName="DESKTOP-93H19L3" duration="00:00:01.5746755" startTime="2025-07-30T19:43:29.0640339+08:00" endTime="2025-07-30T19:43:30.6405082+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bca7a341-9d30-47da-8668-12e3f07e3ae5">
      <Output>
        <StdOut>=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
============================================&#xD;
=== Starting DeleteTodoItem Performance Load Test ===&#xD;
Starting performance test with 1000 requests...&#xD;
Add a new TodoItem to the database for testing...&#xD;
Successfully created TodoItem with ID: 498 for delete performance testing&#xD;
Completed 100 create/delete cycles...&#xD;
Completed 200 create/delete cycles...&#xD;
Completed 300 create/delete cycles...&#xD;
Completed 400 create/delete cycles...&#xD;
Completed 500 create/delete cycles...&#xD;
Completed 600 create/delete cycles...&#xD;
Completed 700 create/delete cycles...&#xD;
Completed 800 create/delete cycles...&#xD;
Completed 900 create/delete cycles...&#xD;
Completed 1000 create/delete cycles...&#xD;
=== DELETE PERFORMANCE TEST RESULTS ===&#xD;
Total Create/Delete Cycles: 1000&#xD;
Successful Deletions: 1000&#xD;
Failed Deletions: 0&#xD;
Total Duration: 1559.55 ms&#xD;
Average Cycle Time: 1.56 ms per create/delete cycle&#xD;
Cycles per Second: 641.21&#xD;
Success Rate: 100.00%&#xD;
======================================&#xD;
DeleteTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
\ud83d\udcc4 Performance Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
============================================&#xD;
=== Starting DeleteTodoItem Performance Load Test ===&#xD;
Starting performance test with 1000 requests...&#xD;
Add a new TodoItem to the database for testing...&#xD;
Successfully created TodoItem with ID: 498 for delete performance testing&#xD;
Completed 100 create/delete cycles...&#xD;
Completed 200 create/delete cycles...&#xD;
Completed 300 create/delete cycles...&#xD;
Completed 400 create/delete cycles...&#xD;
Completed 500 create/delete cycles...&#xD;
Completed 600 create/delete cycles...&#xD;
Completed 700 create/delete cycles...&#xD;
Completed 800 create/delete cycles...&#xD;
Completed 900 create/delete cycles...&#xD;
Completed 1000 create/delete cycles...&#xD;
=== DELETE PERFORMANCE TEST RESULTS ===&#xD;
Total Create/Delete Cycles: 1000&#xD;
Successful Deletions: 1000&#xD;
Failed Deletions: 0&#xD;
Total Duration: 1559.55 ms&#xD;
Average Cycle Time: 1.56 ms per create/delete cycle&#xD;
Cycles per Second: 641.21&#xD;
Success Rate: 100.00%&#xD;
======================================&#xD;
DeleteTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
============================================&#xD;
=== Starting DeleteTodoItem Performance Load Test ===&#xD;
Starting performance test with 1000 requests...&#xD;
Add a new TodoItem to the database for testing...&#xD;
Successfully created TodoItem with ID: 498 for delete performance testing&#xD;
Completed 100 create/delete cycles...&#xD;
Completed 200 create/delete cycles...&#xD;
Completed 300 create/delete cycles...&#xD;
Completed 400 create/delete cycles...&#xD;
Completed 500 create/delete cycles...&#xD;
Completed 600 create/delete cycles...&#xD;
Completed 700 create/delete cycles...&#xD;
Completed 800 create/delete cycles...&#xD;
Completed 900 create/delete cycles...&#xD;
Completed 1000 create/delete cycles...&#xD;
=== DELETE PERFORMANCE TEST RESULTS ===&#xD;
Total Create/Delete Cycles: 1000&#xD;
Successful Deletions: 1000&#xD;
Failed Deletions: 0&#xD;
Total Duration: 1559.55 ms&#xD;
Average Cycle Time: 1.56 ms per create/delete cycle&#xD;
Cycles per Second: 641.21&#xD;
Success Rate: 100.00%&#xD;
======================================&#xD;
DeleteTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_DeleteTodoItemPerformanceLoadTest_20250730_194329.log&#xD;
Cleanup completed successfully.&#xD;
=================================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dee47ac7-0528-4059-9d36-a139b9b1a012" testId="e3d9ef71-bfd5-5114-23da-7bfb7d757e15" testName="AddTodoItemEndpointTest" computerName="DESKTOP-93H19L3" duration="00:00:00.1408680" startTime="2025-07-30T19:42:48.0229316+08:00" endTime="2025-07-30T19:42:48.1641443+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dee47ac7-0528-4059-9d36-a139b9b1a012">
      <Output>
        <StdOut>=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting AddTodoItemEndpointTest ===&#xD;
Initialized list to track created item IDs for cleanup&#xD;
TEST 1: Adding TodoItem with ID = 0 (integer)...&#xD;
Request payload: Name='Test adding with id is integer 0', IsComplete=False, ID=0&#xD;
Response Body: {"id":490,"name":"Test adding with id is integer 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with auto-generated ID: 490&#xD;
TEST 2: Adding TodoItem with ID = '0' (string)...&#xD;
Request payload: Name='The item with id is string 0', IsComplete=False, ID='0'&#xD;
Response Body: {"id":491,"name":"The item with id is string 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 491 (expected: 491)&#xD;
TEST 3: Adding TodoItem with specific ID value...&#xD;
Request payload: Name='An item with a given ID', IsComplete=False, ID=492&#xD;
Response Body: {"id":492,"name":"An item with a given ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with specified ID: 492&#xD;
TEST 4: Adding TodoItem with no ID property...&#xD;
Request payload: Name='Item with no id property', IsComplete=True, ID=&lt;not provided&gt;&#xD;
Response Body: Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.&#xD;
 ---&gt; Npgsql.PostgresException (0x80004005): 23505: 重复键违反唯一约束"PK_TodoItems"&#xD;
&#xD;
DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
   at Npgsql.Internal.NpgsqlConnector.&lt;ReadMessage&gt;g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
  Exception data:&#xD;
    Severity: 错误&#xD;
    SqlState: 23505&#xD;
    MessageText: 重复键违反唯一约束"PK_TodoItems"&#xD;
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
    SchemaName: public&#xD;
    TableName: TodoItems&#xD;
    ConstraintName: PK_TodoItems&#xD;
    File: nbtinsert.c&#xD;
    Line: 673&#xD;
    Routine: _bt_check_unique&#xD;
   --- End of inner exception stack trace ---&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at TodoApi.Controllers.TodoItemsController.PostTodoItem(TodoItem todoItem) in D:\James\PayoneerSubmission\Web_API_Demo-main\TestWebApi_Demo\Controllers\TodoItemsController.cs:line 99&#xD;
   at lambda_method35(Closure, Object)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeActionMethodAsync&gt;g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeNextActionFilterAsync&gt;g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeInnerFilterAsync&gt;g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeFilterPipelineAsync&gt;g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.&lt;Invoke&gt;g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)&#xD;
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)&#xD;
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)&#xD;
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)&#xD;
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)&#xD;
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)&#xD;
&#xD;
HEADERS&#xD;
=======&#xD;
Connection: keep-alive&#xD;
Host: localhost:5089&#xD;
Content-Type: application/json&#xD;
Content-Length: 65&#xD;
&#xD;
====================&#xD;
⚠ Note: This test has an unresolved issue - works in Postman but not in automated test&#xD;
TEST 5: Adding TodoItem with no Name property...&#xD;
Request payload: aProperty='Item with no name property', IsComplete=True, ID=494&#xD;
Response Body: {"id":494,"name":null,"isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 494, Name automatically set to null&#xD;
TEST 6: Adding TodoItem with no IsComplete property...&#xD;
Request payload: Name='Item with no Complete property', notComplete=True, ID=495&#xD;
Response Body: {"id":495,"name":"Item with no Complete property","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 495, IsComplete automatically set to false&#xD;
TEST 7: Adding TodoItem with maximum long value as ID...&#xD;
Request payload: Name='Item with maximum long ID', isComplete=True, ID=9223372036854775807 (Int64.MaxValue)&#xD;
Response Body: {"id":9223372036854775807,"name":"Item with maximum long ID","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with maximum long ID: 9223372036854775807&#xD;
TEST 8: Adding TodoItem with invalid oversized ID value...&#xD;
Request payload: ID='99999999999999999999999999' (oversized), Name length=15000 chars&#xD;
✓ Correctly rejected oversized ID with BadRequest status&#xD;
TEST 9: Adding TodoItem with very long name...&#xD;
Request payload: Name length=15000 chars, ID=496&#xD;
Response Body: {"id":496,"name":"Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name ","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with very long name, ID: 496&#xD;
TEST 10: Adding empty TodoItem object...&#xD;
Request payload: {} (empty object)&#xD;
✓ Empty object 493 accepted with Created status (API handles gracefully)&#xD;
TEST 11: Adding TodoItem with existing ID (conflict test)...&#xD;
Request payload: Name='Item with existing ID', ID=490 (existing)&#xD;
✓ Correctly rejected duplicate ID with InternalServerError status&#xD;
TEST 12: Adding TodoItem with ID as word (security test)...&#xD;
Request payload: Name='Item with id as a word instead of a number', ID='ABC' (non-numeric)&#xD;
✓ Correctly rejected non-numeric ID with BadRequest status&#xD;
TEST 13: SQL injection attempt in ID field (security test)...&#xD;
Request payload: ID='1 OR 1=1; DROP TABLE TodoItems; --' (SQL injection attempt)&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 14: Adding TodoItem with null values...&#xD;
Request payload: All properties set to null&#xD;
✓ Correctly rejected null values with BadRequest status&#xD;
TEST 15: Invalid content type test (security test)...&#xD;
✓ Correctly rejected invalid content type with UnsupportedMediaType status&#xD;
Cleanup: Deleting 8 created TodoItems...&#xD;
Deleting TodoItem with ID: 490&#xD;
Deleting TodoItem with ID: 491&#xD;
Deleting TodoItem with ID: 492&#xD;
Deleting TodoItem with ID: 494&#xD;
Deleting TodoItem with ID: 495&#xD;
Deleting TodoItem with ID: 9223372036854775807&#xD;
Deleting TodoItem with ID: 496&#xD;
Deleting TodoItem with ID: 493&#xD;
✓ Successfully deleted all 8 test items&#xD;
AddTodoItemEndpointTest completed successfully.&#xD;
===============================================&#xD;
&#xD;
TEST RESULT: AddTodoItemEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 108.96 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
\ud83d\udcc4 Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting AddTodoItemEndpointTest ===&#xD;
Initialized list to track created item IDs for cleanup&#xD;
TEST 1: Adding TodoItem with ID = 0 (integer)...&#xD;
Request payload: Name='Test adding with id is integer 0', IsComplete=False, ID=0&#xD;
Response Body: {"id":490,"name":"Test adding with id is integer 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with auto-generated ID: 490&#xD;
TEST 2: Adding TodoItem with ID = '0' (string)...&#xD;
Request payload: Name='The item with id is string 0', IsComplete=False, ID='0'&#xD;
Response Body: {"id":491,"name":"The item with id is string 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 491 (expected: 491)&#xD;
TEST 3: Adding TodoItem with specific ID value...&#xD;
Request payload: Name='An item with a given ID', IsComplete=False, ID=492&#xD;
Response Body: {"id":492,"name":"An item with a given ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with specified ID: 492&#xD;
TEST 4: Adding TodoItem with no ID property...&#xD;
Request payload: Name='Item with no id property', IsComplete=True, ID=&lt;not provided&gt;&#xD;
Response Body: Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.&#xD;
 ---&gt; Npgsql.PostgresException (0x80004005): 23505: 重复键违反唯一约束"PK_TodoItems"&#xD;
&#xD;
DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
   at Npgsql.Internal.NpgsqlConnector.&lt;ReadMessage&gt;g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
  Exception data:&#xD;
    Severity: 错误&#xD;
    SqlState: 23505&#xD;
    MessageText: 重复键违反唯一约束"PK_TodoItems"&#xD;
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
    SchemaName: public&#xD;
    TableName: TodoItems&#xD;
    ConstraintName: PK_TodoItems&#xD;
    File: nbtinsert.c&#xD;
    Line: 673&#xD;
    Routine: _bt_check_unique&#xD;
   --- End of inner exception stack trace ---&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at TodoApi.Controllers.TodoItemsController.PostTodoItem(TodoItem todoItem) in D:\James\PayoneerSubmission\Web_API_Demo-main\TestWebApi_Demo\Controllers\TodoItemsController.cs:line 99&#xD;
   at lambda_method35(Closure, Object)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeActionMethodAsync&gt;g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeNextActionFilterAsync&gt;g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeInnerFilterAsync&gt;g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeFilterPipelineAsync&gt;g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.&lt;Invoke&gt;g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)&#xD;
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)&#xD;
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)&#xD;
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)&#xD;
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)&#xD;
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)&#xD;
&#xD;
HEADERS&#xD;
=======&#xD;
Connection: keep-alive&#xD;
Host: localhost:5089&#xD;
Content-Type: application/json&#xD;
Content-Length: 65&#xD;
&#xD;
====================&#xD;
⚠ Note: This test has an unresolved issue - works in Postman but not in automated test&#xD;
TEST 5: Adding TodoItem with no Name property...&#xD;
Request payload: aProperty='Item with no name property', IsComplete=True, ID=494&#xD;
Response Body: {"id":494,"name":null,"isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 494, Name automatically set to null&#xD;
TEST 6: Adding TodoItem with no IsComplete property...&#xD;
Request payload: Name='Item with no Complete property', notComplete=True, ID=495&#xD;
Response Body: {"id":495,"name":"Item with no Complete property","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 495, IsComplete automatically set to false&#xD;
TEST 7: Adding TodoItem with maximum long value as ID...&#xD;
Request payload: Name='Item with maximum long ID', isComplete=True, ID=9223372036854775807 (Int64.MaxValue)&#xD;
Response Body: {"id":9223372036854775807,"name":"Item with maximum long ID","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with maximum long ID: 9223372036854775807&#xD;
TEST 8: Adding TodoItem with invalid oversized ID value...&#xD;
Request payload: ID='99999999999999999999999999' (oversized), Name length=15000 chars&#xD;
✓ Correctly rejected oversized ID with BadRequest status&#xD;
TEST 9: Adding TodoItem with very long name...&#xD;
Request payload: Name length=15000 chars, ID=496&#xD;
Response Body: {"id":496,"name":"Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name ","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with very long name, ID: 496&#xD;
TEST 10: Adding empty TodoItem object...&#xD;
Request payload: {} (empty object)&#xD;
✓ Empty object 493 accepted with Created status (API handles gracefully)&#xD;
TEST 11: Adding TodoItem with existing ID (conflict test)...&#xD;
Request payload: Name='Item with existing ID', ID=490 (existing)&#xD;
✓ Correctly rejected duplicate ID with InternalServerError status&#xD;
TEST 12: Adding TodoItem with ID as word (security test)...&#xD;
Request payload: Name='Item with id as a word instead of a number', ID='ABC' (non-numeric)&#xD;
✓ Correctly rejected non-numeric ID with BadRequest status&#xD;
TEST 13: SQL injection attempt in ID field (security test)...&#xD;
Request payload: ID='1 OR 1=1; DROP TABLE TodoItems; --' (SQL injection attempt)&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 14: Adding TodoItem with null values...&#xD;
Request payload: All properties set to null&#xD;
✓ Correctly rejected null values with BadRequest status&#xD;
TEST 15: Invalid content type test (security test)...&#xD;
✓ Correctly rejected invalid content type with UnsupportedMediaType status&#xD;
Cleanup: Deleting 8 created TodoItems...&#xD;
Deleting TodoItem with ID: 490&#xD;
Deleting TodoItem with ID: 491&#xD;
Deleting TodoItem with ID: 492&#xD;
Deleting TodoItem with ID: 494&#xD;
Deleting TodoItem with ID: 495&#xD;
Deleting TodoItem with ID: 9223372036854775807&#xD;
Deleting TodoItem with ID: 496&#xD;
Deleting TodoItem with ID: 493&#xD;
✓ Successfully deleted all 8 test items&#xD;
AddTodoItemEndpointTest completed successfully.&#xD;
===============================================&#xD;
&#xD;
TEST RESULT: AddTodoItemEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 108.96 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting AddTodoItemEndpointTest ===&#xD;
Initialized list to track created item IDs for cleanup&#xD;
TEST 1: Adding TodoItem with ID = 0 (integer)...&#xD;
Request payload: Name='Test adding with id is integer 0', IsComplete=False, ID=0&#xD;
Response Body: {"id":490,"name":"Test adding with id is integer 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with auto-generated ID: 490&#xD;
TEST 2: Adding TodoItem with ID = '0' (string)...&#xD;
Request payload: Name='The item with id is string 0', IsComplete=False, ID='0'&#xD;
Response Body: {"id":491,"name":"The item with id is string 0","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 491 (expected: 491)&#xD;
TEST 3: Adding TodoItem with specific ID value...&#xD;
Request payload: Name='An item with a given ID', IsComplete=False, ID=492&#xD;
Response Body: {"id":492,"name":"An item with a given ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with specified ID: 492&#xD;
TEST 4: Adding TodoItem with no ID property...&#xD;
Request payload: Name='Item with no id property', IsComplete=True, ID=&lt;not provided&gt;&#xD;
Response Body: Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.&#xD;
 ---&gt; Npgsql.PostgresException (0x80004005): 23505: 重复键违反唯一约束"PK_TodoItems"&#xD;
&#xD;
DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
   at Npgsql.Internal.NpgsqlConnector.&lt;ReadMessage&gt;g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)&#xD;
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
  Exception data:&#xD;
    Severity: 错误&#xD;
    SqlState: 23505&#xD;
    MessageText: 重复键违反唯一约束"PK_TodoItems"&#xD;
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.&#xD;
    SchemaName: public&#xD;
    TableName: TodoItems&#xD;
    ConstraintName: PK_TodoItems&#xD;
    File: nbtinsert.c&#xD;
    Line: 673&#xD;
    Routine: _bt_check_unique&#xD;
   --- End of inner exception stack trace ---&#xD;
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)&#xD;
   at TodoApi.Controllers.TodoItemsController.PostTodoItem(TodoItem todoItem) in D:\James\PayoneerSubmission\Web_API_Demo-main\TestWebApi_Demo\Controllers\TodoItemsController.cs:line 99&#xD;
   at lambda_method35(Closure, Object)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeActionMethodAsync&gt;g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeNextActionFilterAsync&gt;g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.&lt;InvokeInnerFilterAsync&gt;g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeFilterPipelineAsync&gt;g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)&#xD;
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.&lt;Invoke&gt;g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)&#xD;
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)&#xD;
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)&#xD;
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)&#xD;
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)&#xD;
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)&#xD;
&#xD;
HEADERS&#xD;
=======&#xD;
Connection: keep-alive&#xD;
Host: localhost:5089&#xD;
Content-Type: application/json&#xD;
Content-Length: 65&#xD;
&#xD;
====================&#xD;
⚠ Note: This test has an unresolved issue - works in Postman but not in automated test&#xD;
TEST 5: Adding TodoItem with no Name property...&#xD;
Request payload: aProperty='Item with no name property', IsComplete=True, ID=494&#xD;
Response Body: {"id":494,"name":null,"isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 494, Name automatically set to null&#xD;
TEST 6: Adding TodoItem with no IsComplete property...&#xD;
Request payload: Name='Item with no Complete property', notComplete=True, ID=495&#xD;
Response Body: {"id":495,"name":"Item with no Complete property","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created TodoItem with ID: 495, IsComplete automatically set to false&#xD;
TEST 7: Adding TodoItem with maximum long value as ID...&#xD;
Request payload: Name='Item with maximum long ID', isComplete=True, ID=9223372036854775807 (Int64.MaxValue)&#xD;
Response Body: {"id":9223372036854775807,"name":"Item with maximum long ID","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with maximum long ID: 9223372036854775807&#xD;
TEST 8: Adding TodoItem with invalid oversized ID value...&#xD;
Request payload: ID='99999999999999999999999999' (oversized), Name length=15000 chars&#xD;
✓ Correctly rejected oversized ID with BadRequest status&#xD;
TEST 9: Adding TodoItem with very long name...&#xD;
Request payload: Name length=15000 chars, ID=496&#xD;
Response Body: {"id":496,"name":"Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name Very long name ","isComplete":true}&#xD;
====================&#xD;
✓ Successfully created TodoItem with very long name, ID: 496&#xD;
TEST 10: Adding empty TodoItem object...&#xD;
Request payload: {} (empty object)&#xD;
✓ Empty object 493 accepted with Created status (API handles gracefully)&#xD;
TEST 11: Adding TodoItem with existing ID (conflict test)...&#xD;
Request payload: Name='Item with existing ID', ID=490 (existing)&#xD;
✓ Correctly rejected duplicate ID with InternalServerError status&#xD;
TEST 12: Adding TodoItem with ID as word (security test)...&#xD;
Request payload: Name='Item with id as a word instead of a number', ID='ABC' (non-numeric)&#xD;
✓ Correctly rejected non-numeric ID with BadRequest status&#xD;
TEST 13: SQL injection attempt in ID field (security test)...&#xD;
Request payload: ID='1 OR 1=1; DROP TABLE TodoItems; --' (SQL injection attempt)&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 14: Adding TodoItem with null values...&#xD;
Request payload: All properties set to null&#xD;
✓ Correctly rejected null values with BadRequest status&#xD;
TEST 15: Invalid content type test (security test)...&#xD;
✓ Correctly rejected invalid content type with UnsupportedMediaType status&#xD;
Cleanup: Deleting 8 created TodoItems...&#xD;
Deleting TodoItem with ID: 490&#xD;
Deleting TodoItem with ID: 491&#xD;
Deleting TodoItem with ID: 492&#xD;
Deleting TodoItem with ID: 494&#xD;
Deleting TodoItem with ID: 495&#xD;
Deleting TodoItem with ID: 9223372036854775807&#xD;
Deleting TodoItem with ID: 496&#xD;
Deleting TodoItem with ID: 493&#xD;
✓ Successfully deleted all 8 test items&#xD;
AddTodoItemEndpointTest completed successfully.&#xD;
===============================================&#xD;
&#xD;
TEST RESULT: AddTodoItemEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 108.96 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_AddTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8f45dfbf-2be8-4622-9929-516769422a7c" testId="b2036cf7-4dfc-591b-a3f1-fcc0856353d4" testName="GetAllTodoItemsPerformanceLoadTest" computerName="DESKTOP-93H19L3" duration="00:00:08.1036090" startTime="2025-07-30T19:43:05.4143001+08:00" endTime="2025-07-30T19:43:13.5181949+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f45dfbf-2be8-4622-9929-516769422a7c">
      <Output>
        <StdOut>=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
============================================&#xD;
=== Starting GetAllTodoItems Performance Load Test ===&#xD;
Starting performance test with 10000 GET requests to retrieve all TodoItems...&#xD;
Act - Query the /api/todoitems endpoint 10,000 times&#xD;
Completed 1000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 GET requests... (Success rate so far: 100.0%)&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 8093.53 ms&#xD;
Average Response Time: 0.81 ms per request&#xD;
Requests per Second: 1235.55&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
\ud83d\udcc4 Performance Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
============================================&#xD;
=== Starting GetAllTodoItems Performance Load Test ===&#xD;
Starting performance test with 10000 GET requests to retrieve all TodoItems...&#xD;
Act - Query the /api/todoitems endpoint 10,000 times&#xD;
Completed 1000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 GET requests... (Success rate so far: 100.0%)&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 8093.53 ms&#xD;
Average Response Time: 0.81 ms per request&#xD;
Requests per Second: 1235.55&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
============================================&#xD;
=== Starting GetAllTodoItems Performance Load Test ===&#xD;
Starting performance test with 10000 GET requests to retrieve all TodoItems...&#xD;
Act - Query the /api/todoitems endpoint 10,000 times&#xD;
Completed 1000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 GET requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 GET requests... (Success rate so far: 100.0%)&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 8093.53 ms&#xD;
Average Response Time: 0.81 ms per request&#xD;
Requests per Second: 1235.55&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetAllTodoItemsPerformanceLoadTest_20250730_194305.log&#xD;
Cleanup completed successfully.&#xD;
=================================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6765ac02-3462-49de-a92a-8c938d1e0d19" testId="7f8b6f70-530b-e006-4f05-64d67f6889f3" testName="GetTodoItemByID" computerName="DESKTOP-93H19L3" duration="00:00:00.0329536" startTime="2025-07-30T19:42:48.1655733+08:00" endTime="2025-07-30T19:42:48.1987023+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6765ac02-3462-49de-a92a-8c938d1e0d19">
      <Output>
        <StdOut>=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByID&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting GetTodoItemByID test ===&#xD;
Creating a test TodoItem for retrieval testing...&#xD;
Test item payload: Name='Test Item for GET by ID', IsComplete=False&#xD;
Response Body: {"id":494,"name":"Test Item for GET by ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created test TodoItem with ID: 494&#xD;
TEST 1: Retrieving TodoItem by valid ID...&#xD;
✓ Successfully retrieved TodoItem: ID=494, Name='Test Item for GET by ID', IsComplete=False&#xD;
TEST 2: Attempting to retrieve TodoItem by invalid/non-existent ID...&#xD;
✓ Correctly returned NotFound for invalid ID: 496&#xD;
TEST 3: Security test - Attempting to retrieve TodoItem by word (non-numeric ID)...&#xD;
✓ Correctly rejected non-numeric ID 'someword' with BadRequest status&#xD;
TEST 4: Security test - Attempting to retrieve with multiple IDs...&#xD;
✓ Correctly rejected multiple IDs with BadRequest status&#xD;
TEST 5: Security test - SQL injection attempt in ID parameter...&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 6: Security test - Special characters in ID parameter...&#xD;
✓ Correctly rejected special characters '@#!' with BadRequest status&#xD;
TEST 7: Security test - Path traversal attempt...&#xD;
✓ Successfully blocked path traversal attempt '../etc/passwd' with NotFound status&#xD;
Cleanup: Deleting the test TodoItem with ID: 494&#xD;
✓ Successfully deleted test TodoItem with ID: 494&#xD;
GetTodoItemByID test completed successfully.&#xD;
========================================&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
\ud83d\udcc4 Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByID&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting GetTodoItemByID test ===&#xD;
Creating a test TodoItem for retrieval testing...&#xD;
Test item payload: Name='Test Item for GET by ID', IsComplete=False&#xD;
Response Body: {"id":494,"name":"Test Item for GET by ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created test TodoItem with ID: 494&#xD;
TEST 1: Retrieving TodoItem by valid ID...&#xD;
✓ Successfully retrieved TodoItem: ID=494, Name='Test Item for GET by ID', IsComplete=False&#xD;
TEST 2: Attempting to retrieve TodoItem by invalid/non-existent ID...&#xD;
✓ Correctly returned NotFound for invalid ID: 496&#xD;
TEST 3: Security test - Attempting to retrieve TodoItem by word (non-numeric ID)...&#xD;
✓ Correctly rejected non-numeric ID 'someword' with BadRequest status&#xD;
TEST 4: Security test - Attempting to retrieve with multiple IDs...&#xD;
✓ Correctly rejected multiple IDs with BadRequest status&#xD;
TEST 5: Security test - SQL injection attempt in ID parameter...&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 6: Security test - Special characters in ID parameter...&#xD;
✓ Correctly rejected special characters '@#!' with BadRequest status&#xD;
TEST 7: Security test - Path traversal attempt...&#xD;
✓ Successfully blocked path traversal attempt '../etc/passwd' with NotFound status&#xD;
Cleanup: Deleting the test TodoItem with ID: 494&#xD;
✓ Successfully deleted test TodoItem with ID: 494&#xD;
GetTodoItemByID test completed successfully.&#xD;
========================================&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByID&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
==========================================&#xD;
=== Starting GetTodoItemByID test ===&#xD;
Creating a test TodoItem for retrieval testing...&#xD;
Test item payload: Name='Test Item for GET by ID', IsComplete=False&#xD;
Response Body: {"id":494,"name":"Test Item for GET by ID","isComplete":false}&#xD;
====================&#xD;
✓ Successfully created test TodoItem with ID: 494&#xD;
TEST 1: Retrieving TodoItem by valid ID...&#xD;
✓ Successfully retrieved TodoItem: ID=494, Name='Test Item for GET by ID', IsComplete=False&#xD;
TEST 2: Attempting to retrieve TodoItem by invalid/non-existent ID...&#xD;
✓ Correctly returned NotFound for invalid ID: 496&#xD;
TEST 3: Security test - Attempting to retrieve TodoItem by word (non-numeric ID)...&#xD;
✓ Correctly rejected non-numeric ID 'someword' with BadRequest status&#xD;
TEST 4: Security test - Attempting to retrieve with multiple IDs...&#xD;
✓ Correctly rejected multiple IDs with BadRequest status&#xD;
TEST 5: Security test - SQL injection attempt in ID parameter...&#xD;
✓ Successfully blocked SQL injection attempt with BadRequest status&#xD;
TEST 6: Security test - Special characters in ID parameter...&#xD;
✓ Correctly rejected special characters '@#!' with BadRequest status&#xD;
TEST 7: Security test - Path traversal attempt...&#xD;
✓ Successfully blocked path traversal attempt '../etc/passwd' with NotFound status&#xD;
Cleanup: Deleting the test TodoItem with ID: 494&#xD;
✓ Successfully deleted test TodoItem with ID: 494&#xD;
GetTodoItemByID test completed successfully.&#xD;
========================================&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetTodoItemByID_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3269108d-d9fc-409b-a84b-13bad6b03f63" testId="d1940abf-ebee-e11c-bdba-415ce1af950d" testName="UpdateTodoItemPerformanceLoadTest" computerName="DESKTOP-93H19L3" duration="00:00:12.4834340" startTime="2025-07-30T19:43:16.5785676+08:00" endTime="2025-07-30T19:43:29.0622952+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3269108d-d9fc-409b-a84b-13bad6b03f63">
      <Output>
        <StdOut>=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
============================================&#xD;
=== Starting UpdateTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 update requests...&#xD;
Creating a new TodoItem in the database for testing...&#xD;
Successfully created TodoItem with ID: 497 for performance testing&#xD;
Act - Update the same TodoItem multiple times for performance testing&#xD;
Completed 1000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 update requests... (Success rate so far: 100.0%)&#xD;
=== UPDATE PERFORMANCE TEST RESULTS ===&#xD;
Total Update Requests: 10000&#xD;
Successful Updates: 10000&#xD;
Failed Updates: 0&#xD;
Total Duration: 12448.19 ms&#xD;
Average Response Time: 1.24 ms per update&#xD;
Updates per Second: 803.33&#xD;
Success Rate: 100.00%&#xD;
=======================================&#xD;
Cleaning up: Deleting the test TodoItem...&#xD;
Successfully deleted test TodoItem with ID: 497&#xD;
UpdateTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
\ud83d\udcc4 Performance Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
============================================&#xD;
=== Starting UpdateTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 update requests...&#xD;
Creating a new TodoItem in the database for testing...&#xD;
Successfully created TodoItem with ID: 497 for performance testing&#xD;
Act - Update the same TodoItem multiple times for performance testing&#xD;
Completed 1000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 update requests... (Success rate so far: 100.0%)&#xD;
=== UPDATE PERFORMANCE TEST RESULTS ===&#xD;
Total Update Requests: 10000&#xD;
Successful Updates: 10000&#xD;
Failed Updates: 0&#xD;
Total Duration: 12448.19 ms&#xD;
Average Response Time: 1.24 ms per update&#xD;
Updates per Second: 803.33&#xD;
Success Rate: 100.00%&#xD;
=======================================&#xD;
Cleaning up: Deleting the test TodoItem...&#xD;
Successfully deleted test TodoItem with ID: 497&#xD;
UpdateTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
============================================&#xD;
=== Starting UpdateTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 update requests...&#xD;
Creating a new TodoItem in the database for testing...&#xD;
Successfully created TodoItem with ID: 497 for performance testing&#xD;
Act - Update the same TodoItem multiple times for performance testing&#xD;
Completed 1000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 2000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 3000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 4000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 5000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 6000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 7000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 8000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 9000 update requests... (Success rate so far: 100.0%)&#xD;
Completed 10000 update requests... (Success rate so far: 100.0%)&#xD;
=== UPDATE PERFORMANCE TEST RESULTS ===&#xD;
Total Update Requests: 10000&#xD;
Successful Updates: 10000&#xD;
Failed Updates: 0&#xD;
Total Duration: 12448.19 ms&#xD;
Average Response Time: 1.24 ms per update&#xD;
Updates per Second: 803.33&#xD;
Success Rate: 100.00%&#xD;
=======================================&#xD;
Cleaning up: Deleting the test TodoItem...&#xD;
Successfully deleted test TodoItem with ID: 497&#xD;
UpdateTodoItem Performance Load Test completed successfully.&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_UpdateTodoItemPerformanceLoadTest_20250730_194316.log&#xD;
Cleanup completed successfully.&#xD;
=================================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="882b312f-9d7e-4153-a301-00d9d4dbd0b0" testId="25f758dd-400d-25d6-8e1b-68c1a11dc289" testName="AddTodoItemPerformanceLoadTest" computerName="DESKTOP-93H19L3" duration="00:00:03.0519107" startTime="2025-07-30T19:43:13.5250397+08:00" endTime="2025-07-30T19:43:16.5774179+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="882b312f-9d7e-4153-a301-00d9d4dbd0b0">
      <Output>
        <StdOut>=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
============================================&#xD;
=== Starting AddTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
Completed 1000 requests...&#xD;
Completed 2000 requests...&#xD;
Completed 3000 requests...&#xD;
Completed 4000 requests...&#xD;
Completed 5000 requests...&#xD;
Completed 6000 requests...&#xD;
Completed 7000 requests...&#xD;
Completed 8000 requests...&#xD;
Completed 9000 requests...&#xD;
Completed 10000 requests...&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 3040.77 ms&#xD;
Average Response Time: 0.30 ms per request&#xD;
Requests per Second: 3288.65&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
\ud83d\udcc4 Performance Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
============================================&#xD;
=== Starting AddTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
Completed 1000 requests...&#xD;
Completed 2000 requests...&#xD;
Completed 3000 requests...&#xD;
Completed 4000 requests...&#xD;
Completed 5000 requests...&#xD;
Completed 6000 requests...&#xD;
Completed 7000 requests...&#xD;
Completed 8000 requests...&#xD;
Completed 9000 requests...&#xD;
Completed 10000 requests...&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 3040.77 ms&#xD;
Average Response Time: 0.30 ms per request&#xD;
Requests per Second: 3288.65&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: AddTodoItemPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
============================================&#xD;
=== Starting AddTodoItem Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
Completed 1000 requests...&#xD;
Completed 2000 requests...&#xD;
Completed 3000 requests...&#xD;
Completed 4000 requests...&#xD;
Completed 5000 requests...&#xD;
Completed 6000 requests...&#xD;
Completed 7000 requests...&#xD;
Completed 8000 requests...&#xD;
Completed 9000 requests...&#xD;
Completed 10000 requests...&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 3040.77 ms&#xD;
Average Response Time: 0.30 ms per request&#xD;
Requests per Second: 3288.65&#xD;
================================&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_AddTodoItemPerformanceLoadTest_20250730_194313.log&#xD;
Cleanup completed successfully.&#xD;
=================================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2055e91c-bf26-4e54-b6e3-f9bbcbec2b6e" testId="bc476791-d72c-7362-fea7-1e1635709024" testName="GetTodoItemByIDPerformanceLoadTest" computerName="DESKTOP-93H19L3" duration="00:00:17.1289454" startTime="2025-07-30T19:42:48.2818103+08:00" endTime="2025-07-30T19:43:05.4113729+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2055e91c-bf26-4e54-b6e3-f9bbcbec2b6e">
      <Output>
        <StdOut>=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByIDPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
============================================&#xD;
=== Starting GetTodoItemByID Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
✓ Completed 1000 requests... Success rate: 100.00%&#xD;
✓ Completed 2000 requests... Success rate: 100.00%&#xD;
✓ Completed 3000 requests... Success rate: 100.00%&#xD;
✓ Completed 4000 requests... Success rate: 100.00%&#xD;
✓ Completed 5000 requests... Success rate: 100.00%&#xD;
✓ Completed 6000 requests... Success rate: 100.00%&#xD;
✓ Completed 7000 requests... Success rate: 100.00%&#xD;
✓ Completed 8000 requests... Success rate: 100.00%&#xD;
✓ Completed 9000 requests... Success rate: 100.00%&#xD;
✓ Completed 10000 requests... Success rate: 100.00%&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 17100.69 ms&#xD;
Average Response Time: 1.71 ms per request&#xD;
Requests per Second: 584.77&#xD;
================================&#xD;
GetTodoItemByIDPerformanceLoadTest completed successfully.&#xD;
&#xD;
TEST RESULT: GetTodoItemByIDPerformanceLoadTest&#xD;
Status: PASSED&#xD;
Duration: 17108.89 ms&#xD;
Error: Success Rate: 100.00%, Avg Response: 1.71ms&#xD;
Completed at: 2025-07-30 19:43:05&#xD;
--------------------------------------------------&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
\ud83d\udcc4 Performance Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByIDPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
============================================&#xD;
=== Starting GetTodoItemByID Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
✓ Completed 1000 requests... Success rate: 100.00%&#xD;
✓ Completed 2000 requests... Success rate: 100.00%&#xD;
✓ Completed 3000 requests... Success rate: 100.00%&#xD;
✓ Completed 4000 requests... Success rate: 100.00%&#xD;
✓ Completed 5000 requests... Success rate: 100.00%&#xD;
✓ Completed 6000 requests... Success rate: 100.00%&#xD;
✓ Completed 7000 requests... Success rate: 100.00%&#xD;
✓ Completed 8000 requests... Success rate: 100.00%&#xD;
✓ Completed 9000 requests... Success rate: 100.00%&#xD;
✓ Completed 10000 requests... Success rate: 100.00%&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 17100.69 ms&#xD;
Average Response Time: 1.71 ms per request&#xD;
Requests per Second: 584.77&#xD;
================================&#xD;
GetTodoItemByIDPerformanceLoadTest completed successfully.&#xD;
&#xD;
TEST RESULT: GetTodoItemByIDPerformanceLoadTest&#xD;
Status: PASSED&#xD;
Duration: 17108.89 ms&#xD;
Error: Success Rate: 100.00%, Avg Response: 1.71ms&#xD;
Completed at: 2025-07-30 19:43:05&#xD;
--------------------------------------------------&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
=================================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== PERFORMANCE TEST INITIALIZATION ===&#xD;
Test Method: GetTodoItemByIDPerformanceLoadTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
HttpClient configured with base address: http://localhost:5089/&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Performance test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
============================================&#xD;
=== Starting GetTodoItemByID Performance Load Test ===&#xD;
Starting performance test with 10000 requests...&#xD;
✓ Completed 1000 requests... Success rate: 100.00%&#xD;
✓ Completed 2000 requests... Success rate: 100.00%&#xD;
✓ Completed 3000 requests... Success rate: 100.00%&#xD;
✓ Completed 4000 requests... Success rate: 100.00%&#xD;
✓ Completed 5000 requests... Success rate: 100.00%&#xD;
✓ Completed 6000 requests... Success rate: 100.00%&#xD;
✓ Completed 7000 requests... Success rate: 100.00%&#xD;
✓ Completed 8000 requests... Success rate: 100.00%&#xD;
✓ Completed 9000 requests... Success rate: 100.00%&#xD;
✓ Completed 10000 requests... Success rate: 100.00%&#xD;
=== PERFORMANCE TEST RESULTS ===&#xD;
Total Requests: 10000&#xD;
Successful Requests: 10000&#xD;
Failed Requests: 0&#xD;
Total Duration: 17100.69 ms&#xD;
Average Response Time: 1.71 ms per request&#xD;
Requests per Second: 584.77&#xD;
================================&#xD;
GetTodoItemByIDPerformanceLoadTest completed successfully.&#xD;
&#xD;
TEST RESULT: GetTodoItemByIDPerformanceLoadTest&#xD;
Status: PASSED&#xD;
Duration: 17108.89 ms&#xD;
Error: Success Rate: 100.00%, Avg Response: 1.71ms&#xD;
Completed at: 2025-07-30 19:43:05&#xD;
--------------------------------------------------&#xD;
=== PERFORMANCE TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Performance_Test_GetTodoItemByIDPerformanceLoadTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
=================================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c5e91c22-c981-4aa5-80d8-8dbc87bf060a" testId="03f77c6c-6140-bb16-d7c5-cd67f4e06b27" testName="GetAllTodoItemsEndpointTest" computerName="DESKTOP-93H19L3" duration="00:00:00.5837579" startTime="2025-07-30T19:42:47.3887564+08:00" endTime="2025-07-30T19:42:48.0118529+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c5e91c22-c981-4aa5-80d8-8dbc87bf060a">
      <Output>
        <StdOut>=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
==========================================&#xD;
=== Starting GetAllTodoItemsEndpointTest ===&#xD;
Retrieving all TodoItems from the database...&#xD;
     Warning:&#xD;
     The component "Fluent Assertions" is governed by the rules defined in the Xceed License Agreement and&#xD;
     the Xceed Fluent Assertions Community License. You may use Fluent Assertions free of charge for&#xD;
     non-commercial use only. An active subscription is required to use Fluent Assertions for commercial use.&#xD;
&#xD;
     Please contact Xceed Sales mailto:sales@xceed.com to acquire a subscription at a very low cost.&#xD;
&#xD;
     A paid commercial license supports the development and continued increasing support of&#xD;
     Fluent Assertions users under both commercial and community licenses. Help us&#xD;
     keep Fluent Assertions at the forefront of unit testing.&#xD;
&#xD;
     For more information, visit https://xceed.com/products/unit-testing/fluent-assertions/&#xD;
Current number of TodoItems in database: 3&#xD;
Creating a new TodoItem to add to the database...&#xD;
New TodoItem details - Name: 'Newly added Todo Item', IsComplete: False&#xD;
Response Body: {"id":489,"name":"Newly added Todo Item","isComplete":false}&#xD;
====================&#xD;
Successfully created TodoItem with ID: 489&#xD;
Verifying the new TodoItem was added to the database...&#xD;
Database now contains 4 items (expected: 4)&#xD;
Verification successful - TodoItem found with correct properties&#xD;
Cleaning up: Deleting the newly created TodoItem with ID: 489&#xD;
Successfully deleted TodoItem with ID: 489&#xD;
GetAllTodoItemsEndpointTest completed successfully.&#xD;
============================================&#xD;
&#xD;
TEST RESULT: GetAllTodoItemsEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 80.27 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
\ud83d\udcc4 Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
==========================================&#xD;
=== Starting GetAllTodoItemsEndpointTest ===&#xD;
Retrieving all TodoItems from the database...&#xD;
     Warning:&#xD;
     The component "Fluent Assertions" is governed by the rules defined in the Xceed License Agreement and&#xD;
     the Xceed Fluent Assertions Community License. You may use Fluent Assertions free of charge for&#xD;
     non-commercial use only. An active subscription is required to use Fluent Assertions for commercial use.&#xD;
&#xD;
     Please contact Xceed Sales mailto:sales@xceed.com to acquire a subscription at a very low cost.&#xD;
&#xD;
     A paid commercial license supports the development and continued increasing support of&#xD;
     Fluent Assertions users under both commercial and community licenses. Help us&#xD;
     keep Fluent Assertions at the forefront of unit testing.&#xD;
&#xD;
     For more information, visit https://xceed.com/products/unit-testing/fluent-assertions/&#xD;
Current number of TodoItems in database: 3&#xD;
Creating a new TodoItem to add to the database...&#xD;
New TodoItem details - Name: 'Newly added Todo Item', IsComplete: False&#xD;
Response Body: {"id":489,"name":"Newly added Todo Item","isComplete":false}&#xD;
====================&#xD;
Successfully created TodoItem with ID: 489&#xD;
Verifying the new TodoItem was added to the database...&#xD;
Database now contains 4 items (expected: 4)&#xD;
Verification successful - TodoItem found with correct properties&#xD;
Cleaning up: Deleting the newly created TodoItem with ID: 489&#xD;
Successfully deleted TodoItem with ID: 489&#xD;
GetAllTodoItemsEndpointTest completed successfully.&#xD;
============================================&#xD;
&#xD;
TEST RESULT: GetAllTodoItemsEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 80.27 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: GetAllTodoItemsEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
==========================================&#xD;
=== Starting GetAllTodoItemsEndpointTest ===&#xD;
Retrieving all TodoItems from the database...&#xD;
Current number of TodoItems in database: 3&#xD;
Creating a new TodoItem to add to the database...&#xD;
New TodoItem details - Name: 'Newly added Todo Item', IsComplete: False&#xD;
Response Body: {"id":489,"name":"Newly added Todo Item","isComplete":false}&#xD;
====================&#xD;
Successfully created TodoItem with ID: 489&#xD;
Verifying the new TodoItem was added to the database...&#xD;
Database now contains 4 items (expected: 4)&#xD;
Verification successful - TodoItem found with correct properties&#xD;
Cleaning up: Deleting the newly created TodoItem with ID: 489&#xD;
Successfully deleted TodoItem with ID: 489&#xD;
GetAllTodoItemsEndpointTest completed successfully.&#xD;
============================================&#xD;
&#xD;
TEST RESULT: GetAllTodoItemsEndpointTest&#xD;
Status: PASSED&#xD;
Duration: 80.27 ms&#xD;
Completed at: 2025-07-30 19:42:48&#xD;
--------------------------------------------------&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_GetAllTodoItemsEndpointTest_20250730_194247.log&#xD;
Cleanup completed successfully.&#xD;
==============================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f5235df-dbc1-41c5-8ff5-5261ac72397d" testId="61cc4e70-b93a-06e7-b475-f9a329f4b614" testName="UpdateTodoItemEndPointTest" computerName="DESKTOP-93H19L3" duration="00:00:00.0464901" startTime="2025-07-30T19:42:48.1994641+08:00" endTime="2025-07-30T19:42:48.2461228+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f5235df-dbc1-41c5-8ff5-5261ac72397d">
      <Output>
        <StdOut>=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemEndPointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting UpdateItemEndPointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":495,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 495&#xD;
Updating the new item in the database...&#xD;
Getting the updated item from the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with chinese as Name in the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with wrong id in the database...&#xD;
Updating the new item with id as SQL injection attempt in the database...&#xD;
Deleting the created TodoItem with ID: 495&#xD;
UpdateItemEndPointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
\ud83d\udcc4 Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemEndPointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting UpdateItemEndPointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":495,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 495&#xD;
Updating the new item in the database...&#xD;
Getting the updated item from the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with chinese as Name in the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with wrong id in the database...&#xD;
Updating the new item with id as SQL injection attempt in the database...&#xD;
Deleting the created TodoItem with ID: 495&#xD;
UpdateItemEndPointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: UpdateTodoItemEndPointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting UpdateItemEndPointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":495,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 495&#xD;
Updating the new item in the database...&#xD;
Getting the updated item from the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with chinese as Name in the database...&#xD;
Item updated successfully.&#xD;
Updating the new item with wrong id in the database...&#xD;
Updating the new item with id as SQL injection attempt in the database...&#xD;
Deleting the created TodoItem with ID: 495&#xD;
UpdateItemEndPointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_UpdateTodoItemEndPointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1fa02612-bd35-4f20-bac8-6eb248da65d0" testId="3830ebff-beb2-de8a-90b1-e5121f6ec831" testName="DeleteTodoItemEndpointTest" computerName="DESKTOP-93H19L3" duration="00:00:00.0326796" startTime="2025-07-30T19:42:48.2472477+08:00" endTime="2025-07-30T19:42:48.2804539+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fa02612-bd35-4f20-bac8-6eb248da65d0">
      <Output>
        <StdOut>=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting DeleteTodoItemEndpointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":496,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 496&#xD;
Deleting the item by an invalid ID...&#xD;
Deleting the item by an word...&#xD;
Deleting the item by an valid id twice...&#xD;
Deleting the item by an sql injection attempt...&#xD;
Deleting the item by an special character...&#xD;
Deleting the item by an path traversal attempt...&#xD;
Deleting the item by a valid ID...&#xD;
DeletingTodoItemEndpointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
\ud83d\udcc4 Test log file: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
调试跟踪:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting DeleteTodoItemEndpointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":496,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 496&#xD;
Deleting the item by an invalid ID...&#xD;
Deleting the item by an word...&#xD;
Deleting the item by an valid id twice...&#xD;
Deleting the item by an sql injection attempt...&#xD;
Deleting the item by an special character...&#xD;
Deleting the item by an path traversal attempt...&#xD;
Deleting the item by a valid ID...&#xD;
DeletingTodoItemEndpointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================&#xD;
&#xD;
&#xD;
&#xD;
TestContext 消息:&#xD;
=== FUNCTION TEST INITIALIZATION ===&#xD;
Test Method: DeleteTodoItemEndpointTest&#xD;
Building configuration from appsettings files...&#xD;
Using API base URL: http://localhost:5089&#xD;
Creating HttpClient for API testing...&#xD;
Verifying API connectivity...&#xD;
API connectivity verified successfully. Status: OK&#xD;
Function test initialization completed successfully.&#xD;
Test logs will be saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
==========================================&#xD;
Starting DeleteTodoItemEndpointTest...&#xD;
Creating item to add...&#xD;
Response Body: {"id":496,"name":"Add a new Item","isComplete":false}&#xD;
====================&#xD;
Created item with ID: 496&#xD;
Deleting the item by an invalid ID...&#xD;
Deleting the item by an word...&#xD;
Deleting the item by an valid id twice...&#xD;
Deleting the item by an sql injection attempt...&#xD;
Deleting the item by an special character...&#xD;
Deleting the item by an path traversal attempt...&#xD;
Deleting the item by a valid ID...&#xD;
DeletingTodoItemEndpointTest completed successfully.&#xD;
=== FUNCTION TEST CLEANUP ===&#xD;
Disposing HttpClient and cleaning up resources...&#xD;
Complete test log saved to: D:\James\PayoneerSubmission\Web_API_Test\TestLogs\Web_API_Function_Test_DeleteTodoItemEndpointTest_20250730_194248.log&#xD;
Cleanup completed successfully.&#xD;
==============================</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="DeleteTodoItemEndpointTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="3830ebff-beb2-de8a-90b1-e5121f6ec831">
      <Execution id="1fa02612-bd35-4f20-bac8-6eb248da65d0" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_function_Test" name="DeleteTodoItemEndpointTest" />
    </UnitTest>
    <UnitTest name="GetTodoItemByID" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="7f8b6f70-530b-e006-4f05-64d67f6889f3">
      <Execution id="6765ac02-3462-49de-a92a-8c938d1e0d19" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_function_Test" name="GetTodoItemByID" />
    </UnitTest>
    <UnitTest name="GetAllTodoItemsPerformanceLoadTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="b2036cf7-4dfc-591b-a3f1-fcc0856353d4">
      <Execution id="8f45dfbf-2be8-4622-9929-516769422a7c" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_Performance_Test" name="GetAllTodoItemsPerformanceLoadTest" />
    </UnitTest>
    <UnitTest name="UpdateTodoItemPerformanceLoadTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="d1940abf-ebee-e11c-bdba-415ce1af950d">
      <Execution id="3269108d-d9fc-409b-a84b-13bad6b03f63" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_Performance_Test" name="UpdateTodoItemPerformanceLoadTest" />
    </UnitTest>
    <UnitTest name="GetAllTodoItemsEndpointTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="03f77c6c-6140-bb16-d7c5-cd67f4e06b27">
      <Execution id="c5e91c22-c981-4aa5-80d8-8dbc87bf060a" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_function_Test" name="GetAllTodoItemsEndpointTest" />
    </UnitTest>
    <UnitTest name="AddTodoItemEndpointTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="e3d9ef71-bfd5-5114-23da-7bfb7d757e15">
      <Execution id="dee47ac7-0528-4059-9d36-a139b9b1a012" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_function_Test" name="AddTodoItemEndpointTest" />
    </UnitTest>
    <UnitTest name="AddTodoItemPerformanceLoadTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="25f758dd-400d-25d6-8e1b-68c1a11dc289">
      <Execution id="882b312f-9d7e-4153-a301-00d9d4dbd0b0" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_Performance_Test" name="AddTodoItemPerformanceLoadTest" />
    </UnitTest>
    <UnitTest name="UpdateTodoItemEndPointTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="61cc4e70-b93a-06e7-b475-f9a329f4b614">
      <Execution id="9f5235df-dbc1-41c5-8ff5-5261ac72397d" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_function_Test" name="UpdateTodoItemEndPointTest" />
    </UnitTest>
    <UnitTest name="GetTodoItemByIDPerformanceLoadTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="bc476791-d72c-7362-fea7-1e1635709024">
      <Execution id="2055e91c-bf26-4e54-b6e3-f9bbcbec2b6e" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_Performance_Test" name="GetTodoItemByIDPerformanceLoadTest" />
    </UnitTest>
    <UnitTest name="DeleteTodoItemPerformanceLoadTest" storage="d:\james\payoneersubmission\web_api_test\bin\debug\net9.0\web_api_test.dll" id="cec11af5-3b4a-fb93-691d-9eb40784b553">
      <Execution id="bca7a341-9d30-47da-8668-12e3f07e3ae5" />
      <TestMethod codeBase="D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll" adapterTypeName="executor://mstestadapter/v2" className="Web_API_Test.Web_API_Performance_Test" name="DeleteTodoItemPerformanceLoadTest" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="cec11af5-3b4a-fb93-691d-9eb40784b553" executionId="bca7a341-9d30-47da-8668-12e3f07e3ae5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3d9ef71-bfd5-5114-23da-7bfb7d757e15" executionId="dee47ac7-0528-4059-9d36-a139b9b1a012" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b2036cf7-4dfc-591b-a3f1-fcc0856353d4" executionId="8f45dfbf-2be8-4622-9929-516769422a7c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7f8b6f70-530b-e006-4f05-64d67f6889f3" executionId="6765ac02-3462-49de-a92a-8c938d1e0d19" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1940abf-ebee-e11c-bdba-415ce1af950d" executionId="3269108d-d9fc-409b-a84b-13bad6b03f63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25f758dd-400d-25d6-8e1b-68c1a11dc289" executionId="882b312f-9d7e-4153-a301-00d9d4dbd0b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc476791-d72c-7362-fea7-1e1635709024" executionId="2055e91c-bf26-4e54-b6e3-f9bbcbec2b6e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="03f77c6c-6140-bb16-d7c5-cd67f4e06b27" executionId="c5e91c22-c981-4aa5-80d8-8dbc87bf060a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61cc4e70-b93a-06e7-b475-f9a329f4b614" executionId="9f5235df-dbc1-41c5-8ff5-5261ac72397d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3830ebff-beb2-de8a-90b1-e5121f6ec831" executionId="1fa02612-bd35-4f20-bac8-6eb248da65d0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="列表中未列出的结果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有已加载的结果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="10" executed="10" passed="10" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>已为 D:\James\PayoneerSubmission\Web_API_Test\bin\Debug\net9.0\Web_API_Test.dll 启用测试并行化(工作线程: 8，范围: MethodLevel)&#xD;
</StdOut>
    </Output>
    <CollectorDataEntries>
      <Collector agentName="DESKTOP-93H19L3" uri="datacollector://microsoft/CodeCoverage/2.0" collectorDisplayName="Code Coverage">
        <UriAttachments>
          <UriAttachment>
            <A href="DESKTOP-93H19L3\win10_DESKTOP-93H19L3_2025-07-30.19_43_30.cobertura.xml"></A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
    </CollectorDataEntries>
  </ResultSummary>
</TestRun>